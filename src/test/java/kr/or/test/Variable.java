package kr.or.test;

public class Variable {

	public static void main(String[] args) {
/*
 * 별찍기 예제   여지껏 반복문을 실수로 판단함 
 *  for(int i=1; i<4 i++){ i가 1일떄 j=1 * 을찍는줄알고 계속 엇나갔던이유중하나임  i는 1일떄 j를 3번돌고나서 바깥 포문을 증가시켜야되는데
 *  for(int j=1  j<4 j++)				바깥포문이 돌고 안쪽포문을 도는줄알았음 이래서 기술적인부분이 잘못 이해하면 로직자체를 이해하는데 시간이걸려버림 
 *  하나의 지문과 하나의 강의를 볼떄 , 귀찮아서 괜히 지레짐작으로 넘겨짚은게 원인 . 하나의 기술을 습득할떈 귀찮더라도 제대로 알고 이해하고 넘어갔을떄 내것이 되는걸 이제 알아버림
 *  하나의 실수로 인해 프로그램 전체의 영향을 준다고 생각해보면 끔찍한 일이다 . 뭐든지 그 하나의 기술적인 요소에 대해서 제대로 알고 넘어가는습관을 들이고 
 *  그것이 내것이 됬을떄 응용할수있을떄까지 쓰는게 가장 현명하다고 생각함  , 내것이 될떄까지 응용하면서 다음 과 유사한 문제를 만낫을떄 당황하지 않는습관 
 *  뜻대로 풀리지않으면 흥분하는데 이 요소가 정말 쓰레기같은부분 ,안풀리더라도 로직을 천천히 까보면 해결할수있다고생각함
 *  알고리즘 자체가 어떤 문제가 주어졌을때  그것을 해결할수있는 능력 / 그리고 뜻대로 되지않아도 그것을 대처할수있는 능력을 기르자 
 *  정확한뜻은 제대로 알되 기술적인 부분에서는 너무 남을 신용하지말고 진짜 도저히 안될떈 책과 인터넷을 펼치자 , 하나의 기본요소를 제대로 알면 
 *  나중에 커스터 마이징할떄 지금 시간 들이는게 귀찮아서 나중에 다시 똑같은 기술적인 요소를 커스텀 할떄 시간이 비슷하게 걸릴거라 생각함 
 *  하나의 기술적인요소는 한번딱보면 인터넷과 책을 찾아 보지 않고 빠른시간안에 해결하는게 제일 현명하다고생각함 
 *  뭐든지 스킬적인 부분은 완벽하지 않더라도 파보는 습관을 추천함 
 *  
		****	*		 *		****		****				 *			*
		****	**		**		***			 ***			    ***		   ***
		****	***	   ***		**			  **			   *****	  *****
		****	****  ****		*			   *						 *******
		 O		 O		O		O			   세모  				 세모		  *****			
																		   ***	
																		    *
																			세모
				i 는  5보다 작아함 
				j 는  i가 1일떄 4번돌아야함          j는 5지 ? 
		       i는1   j는4일떄  ****
		       i는2일떄 j는 >0 j--
				i     j                    i=1 i<j i++
										   j=5  j>i j--
				1     0 1 2  1 2 3
				2     0 1 2 
				3     0 1 2 
				4     0 1 2 
						i가 4번돌떄 ? j 는 4열 돌아  i 가 1일떈 j가 i만큼도는데 그만큼공백이있어
						i가 1일댄  맨끝에 4번쨰 j가 * 
						i가 2일댄   맨긑에 3번쨰**
						
							i가  4번 실행 시켜야됨 왜냐 행의개수를 보면 알거든 ??
							그러면 아이의 값이 1일떈 공백이 3개들어간후에 j가 4번쨰의 
							
							
				i 1 j 			
						111 123 222 123 333 33123	
				 i가 1일떄 
				 i는 총 ㅂ4번 돌아가고  j는 i가 돌아갈떄마다 j--		
					i 는 1일떄  j는 i 보다 작을떄까지 돌아간댓지 ?
					i는 1일떄 j는 1임 
					i는 2일떄 j는 2임
					i는 3일떄 j는 3임    j가 i보다 작을떄까지 니깐 i 는 1번돌떄 j는 i보다 작을떄까지 도니까 
					 			 i가 1일떄 j는 0
					 			 i가 2일떄  j는 1 는 i보다 작을떄까지
					 			 i가 3일떄 j는 2 3열
					 			 더이상 안돌아가지잖아 왜 i는 j보다 작으니까 i가 4일떈 안돌아감 
					 			 i가 4일떈 j는 3열?
					 			 1일떈 j는 0 
					 			 2일떈 j는 1
					 			 3일떈 j는 2
					 			 4일떈 j는 3
					 			 i가 5는안됨 5가 된다치면 j=4 
					i는 4일떄 j는 4임 
					그럼 실행안됬을떈 ?
					저렇게 되려면     i는 5보다 작아야됨 
								j는 5보다 작아야됨 
								i는 1번돌떄  j는  i만큼 돌아야됨  j는 i는 1일댸 j는 i만큼 j<5 보다 작을떄만큼 j를 돌려 i는1인데 j는 5보다작은 4번도는거지
								i는 2번쨰돌떄 j는 2가 들어갓지? j가  2가<5보다작지 ? 2가 5만큼 돌려면 ?  2 3 4 세번돌아야됨 ?
								i는 3번돌떄 j는3이들어가서 j 가 5보다 작을만큼 돌아야지 ? j는 3이됫음 3이 5보다 작음 ? yes 3 4
								i는 4번돌떄 j는4 4는 5 더돌면 5보다 커지니까 5보다작은 4가될떄 true
								
							자 ****
							  ***
							  **
							  *
					// i는 1일떄  j는 4 ****
					 * i<j 1이4보다 작지? 
					 * i 1 j4 j 3 2 1 0 000*
					 * i 2 j4 3 2 1 0 i가 j보다 작으면 2 >4 ? 2<4  3 4 00** 
					 * i 3 j4 j 4 3 2 1 0  3<j	
					 * i 4 j4 4<4 ? == ****
					 * 																					
		for (int i=1; i<5; i++) {
			for(int j=4; j>0; j--) {
			if(i<j) {
				System.out.print("0");
			}else {
				System.out.print("*");	
			}
		}
			System.out.println("");
	}*/
		 //  i는 0 1 2 3 4번 실행
		//j는  3-i 3-0 :3 3번의 공백을 for j는 0 j<2*i 2*0+1 2 
		// 그럼 j는 2 * i +1 3이니까 3번쨰의 * 하나를찍어 
		// i는 1 j가 0 1 2 -i 2번의 공백을 j는 j<2*i+1 2 번쨰의 *을찍어  
		
	
		
}
}